!function(n){function r(n,r,t){t=t||function(n){return n};var e=new u,i=0,o=function(){e.push(t(i),{name:"scheduled-chunk",time:n,iteration:i,maxIterations:r}),!r||r-1>i?(i++,window.setTimeout(o,n)):e.triggerEnd()};return window.setTimeout(o,0),e}function t(n){var r=new u;return window.setTimeout(function(){n.forEach(function(n){r.push(n,{name:"array-chunk"})}),r.triggerEnd()},0),r}function e(n,r,t){t=t||1;var e=new u;return window.setTimeout(function(){for(var i=n;r>=i;i+=t)e.push(i,{name:"range-chunk",start:n,end:r,stepSize:t});e.triggerEnd()},0),e}function i(n){var r=new u;return n.then(function(n){r.push(n,{name:"single-promise-chunk"}),r.triggerEnd()},function(n){r.triggerError(n)}),r}var o=function(n){this.stream=n,this._ev=[],this._er=[],this._dn=[],this._fi=[],this._one=[]};o.prototype={triggerError:function(n){for(;one=this._one.shift();)one.fail(data);this._er.forEach(function(r){r(n)}),this._fi.forEach(function(n){n()})},triggerEnd:function(){for(;one=this._one.shift();)one.fail(new Error("End of stream"));this._dn.forEach(function(n){n()}),this._fi.forEach(function(n){n()})},trigger:function(n,r){for(;one=this._one.shift();)one.ok(n,r);this._ev.forEach(function(t){t(n,r)})},"finally":function(n){return this._fi.push(n),this},onError:function(n){return this._er.push(n),this},done:function(n){return this._dn.push(n),this},on:function(n){return this._ev.push(n),this},one:function(){var n=this;return new Promise(function(r,t){n._one.push({ok:r,fail:t})})}};var u=function(){this._o=[],this._isStoring=!0,this._s=[]};u.prototype={getObserver:function(){var n=new o(this);return this._o.push(n),n},triggerError:function(n){this._o.forEach(function(r){r.triggerError(n)})},triggerEnd:function(){this._o.forEach(function(n){n.triggerEnd()})},push:function(n,r){this._isStoring&&this._s.push({data:n,meta:r}),this._o.forEach(function(t){t.trigger(n,r)})},"transient":function(){this._isStoring=!1,this._s=[]},toArray:function(){return this._s},getAll:function(){return t(this._s)},pipe:function(n,r){var t=this.getObserver();t.on(function(t,e){r(function(r){n.push(r,{parent:t,parentMeta:e,name:"piped-chunk"})},t,e)}).onError(n.triggerError.bind(n)).done(n.triggerEnd.bind(n))},appendPromise:function(n){var r=new u;return this.getObserver().on(function(t,e){var i=n(t);return i&&i.then?void i.then(function(n){r.push(n,{parent:t,parentMeta:e,name:"appended-promise-chunk"})}):void r.triggerError(new Error("appendPromise: the callback function must return a promise"))}),r},append:function(n){var r=new u;this.getObserver().on(function(t,e){n(t,e).getObserver().on(function(n,i){r.push(n,{parent:t,parentMeta:e,childMeta:i,name:"appended-stream-chunk"})}).onError(r.triggerError.bind(r))}).onError(r.triggerError.bind(r));return r},merge:function(n){var r=new u,t=2,e=function(n,e){n.getObserver().on(function(n,t){r.push(n,{parentMeta:t,name:"merged-"+e+"-chunk"})}).onError(r.triggerError.call(r)).done(function(){t--,0===t&&r.triggerEnd()})};return e(this,"primary"),e(n,"secondary"),r},partition:function(n){var r=new u,t=new u;return this.getObserver().on(function(e,i){var o={parentMeta:i,name:"partitioned-chunk"};n(e)?r.push(e,o):t.push(e,o)}).onError(function(n){r.triggerError(n),t.triggerError(n)}).done(function(){r.triggerEnd(),t.triggerEnd()}),[r,t]},filter:function(n){var r=new u;return this.pipe(r,function(r,t,e){n(t,e)&&r(t)}),r},map:function(n){var r=new u;return this.pipe(r,function(r,t,e){r(n(t,e))}),r},throttle:function(n){var r,t=new u;return this.pipe(t,function(t,e){var i=+new Date;(!r||i-r>n)&&(t(e),r=i)}),t},skip:function(n){var r=new u,t=0;return this.pipe(r,function(r,e){t%n===0&&r(e),t++}),r}},XI("XI.streams",{Observer:o,Stream:u,fromSchedule:r,fromArray:t,fromRange:e,fromPromise:i})}(this);