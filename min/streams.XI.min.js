!function(n){function r(n,r,t){t=t||function(n){return n};var e=new a,i=0,o=function(){var a={data:t(i),meta:{name:"scheduled-chunk",time:n,iteration:i,maxIterations:r}};e.push(a),!r||r-1>i?(i++,window.setTimeout(o,n)):e.triggerEnd()};return window.setTimeout(o,0),e}function t(n){var r=new a;return window.setTimeout(function(){n.forEach(function(n){var t={data:n,meta:{name:"array-chunk"}};r.push(t)}),r.triggerEnd()},0),r}function e(n,r,t){t=t||1;var e=new a;return window.setTimeout(function(){for(var i=n;r>=i;i+=t){var o={data:i,meta:{name:"range-chunk",start:n,end:r,stepSize:t}};e.push(o)}e.triggerEnd()},0),e}function i(n){var r=new a;return n.then(function(n){n={data:n,meta:{name:"single-promise-chunk"}},r.push(n),r.triggerEnd()},function(n){r.triggerError(n)}),r}var o=function(n){this.stream=n,this._ev=[],this._er=[],this._dn=[],this._fi=[],this._one=[]};o.prototype={triggerError:function(n){for(;one=this._one.shift();)one.fail(data);this._er.forEach(function(r){r(n)}),this._fi.forEach(function(n){n()})},triggerEnd:function(){for(;one=this._one.shift();)one.fail(new Error("End of stream"));this._dn.forEach(function(n){n()}),this._fi.forEach(function(n){n()})},trigger:function(n){for(;one=this._one.shift();)one.ok(n);this._ev.forEach(function(r){r(n)})},"finally":function(n){return this._fi.push(n),this},onError:function(n){return this._er.push(n),this},done:function(n){return this._dn.push(n),this},on:function(n){return this._ev.push(n),this},one:function(){var n=this;return new Promise(function(r,t){n._one.push({ok:r,fail:t})})}};var a=function(){this._o=[],this._isStoring=!0,this._s=[]};a.prototype={getObserver:function(){var n=new o(this);return this._o.push(n),n},triggerError:function(n){this._o.forEach(function(r){r.triggerError(n)})},triggerEnd:function(){this._o.forEach(function(n){n.triggerEnd()})},push:function(n){this._isStoring&&this._s.push(n),this._o.forEach(function(r){r.trigger(n)})},"transient":function(){this._isStoring=!1,this._s=[]},toArray:function(){return this._s},getAll:function(){return t(this._s)},pipe:function(n,r){var t=this.getObserver();t.on(function(t){r(function(r){var e={data:r,parent:t,meta:{name:"piped-chunk"}};n.push(e)},t)}).onError(n.triggerError.bind(n)).done(n.triggerEnd.bind(n))},appendPromise:function(n){var r=new a;return this.getObserver().on(function(t){var e=n(t);return e&&e.then?void e.then(function(n){r.push({data:n,parent:t,meta:{name:"appended-promise-chunk"}})}):void r.triggerError(new Error("appendPromise: the callback function must return a promise"))}),r},append:function(n){var r=new a;this.getObserver().on(function(t){n(t).getObserver().on(function(n){r.push({data:n.data,parent:t,meta:{name:"appended-stream-chunk"}})}).onError(r.triggerError.bind(r))}).onError(r.triggerError.bind(r));return r},merge:function(n){var r=new a,t=2,e=function(n,e){n.getObserver().on(function(n){r.push({data:n.data,parent:n,meta:{name:"merged-"+e+"-chunk"}})}).onError(r.triggerError.call(r)).done(function(){t--,0===t&&r.triggerEnd()})};return e(this,"primary"),e(n,"secondary"),r},partition:function(n){var r=new a,t=new a;return this.getObserver().on(function(e){var i={data:e.data,parent:e,meta:{name:"partitioned-chunk"}};n(e)?r.push(i):t.push(i)}).onError(function(n){r.triggerError(n),t.triggerError(n)}).done(function(){r.triggerEnd(),t.triggerEnd()}),[r,t]},filter:function(n){var r=new a;return this.pipe(r,function(r,t){n(t)&&r(t.data)}),r},map:function(n){var r=new a;return this.pipe(r,function(r,t){r(n(t))}),r},throttle:function(n){var r,t=new a;return this.pipe(t,function(t,e){var i=+new Date;(!r||i-r>n)&&(t(e.data),r=i)}),t},skip:function(n){var r=new a,t=0;return this.pipe(r,function(r,e){t%n===0&&r(e.data),t++}),r}},XI("XI.streams",{Observer:o,Stream:a,fromSchedule:r,fromArray:t,fromRange:e,fromPromise:i})}(this);